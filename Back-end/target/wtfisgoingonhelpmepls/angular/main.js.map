{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Models/user.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/class-service.service.ts","./src/app/student-class-details/student-class-details.component.ts","./src/app/student-class-details/student-class-details.component.html","./src/app/student/student.component.ts","./src/app/student/student.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAO,MAAM,IAAI;IAOb,gBAEK,CAAC;CACT;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAChB;AACc;AACO;;;AAG9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,SAAS;QACd,SAAS,EAAE,2EAAgB;KAC5B;IACD;QACE,IAAI,EAAC,OAAO;QACZ,SAAS,EAAE,qEAAc;KAC1B;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,QAAQ;KACrB;CAEF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCLzB,2EAA+B;;6FDKlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACQ;AACE;AACM;AACC;AACR;AAE+C;AAC1D;;AAoBtC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,4EAAY,EAAE,qEAAgB,CAAC,YAPlC;YACP,uEAAa;YACb,oEAAgB;YAChB,oEAAS;YACT,qEAAgB;YAChB,2DAAW;SACZ;mIAIU,SAAS,mBAhBlB,2DAAY;QACZ,qEAAc;QACd,2EAAgB;QAChB,mHAA4B,aAI5B,uEAAa;QACb,oEAAgB;QAChB,oEAAS;QACT,qEAAgB;QAChB,2DAAW;6FAKF,SAAS;cAlBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,2EAAgB;oBAChB,mHAA4B;iBAE7B;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,oEAAS;oBACT,qEAAgB;oBAChB,2DAAW;iBACZ;gBACD,SAAS,EAAE,CAAC,4EAAY,EAAE,qEAAgB,CAAC;gBAC3C,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACoB;;;;;AAcrD,MAAM,cAAc;IASzB,YAAmB,MAAa,EAAU,YAA0B;QAAjD,WAAM,GAAN,MAAM,CAAO;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAPpE,UAAK,GAAC,IAAI,iDAAI,EAAE,CAAC;IAOuD,CAAC;IAGzE,QAAQ;QAEN,IAAI,CAAC,YAAY,GAAC,GAAG,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAO,EAAE,EAAE,GAAE,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAI,CAAC,WAAW,EAAE,GAAC,CAAC,CAAC;IAEhK,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,IAAI,EAAC;YACX,IAAI,CAAC,YAAY,GAAC,GAAG;YACrB,IAAG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAE,SAAS,EAAC;gBAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAC,EAAC,KAAK,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC;aACrD;SACF;aAAI;YACH,IAAI,CAAC,YAAY,GAAC,8BAA8B;SAEjD;IAEH,CAAC;;4EAjCU,cAAc;8FAAd,cAAc;QCf3B,yEACI;QAAA,0EACI;QAAA,sEACI;QAAA,oEACJ;QAAA,4DAAM;QACN,sEACI;QACA,2EACJ;QADyB,0LAA4B;QAAjD,4DACJ;QAAA,4DAAM;QAGN,sEACI;QACA,2EAEJ;QAFwC,0LAA4B;QAAhE,4DAEJ;QAAA,4DAAM;QACN,uEAAiB;QAAA,uDAAgB;QAAA,4DAAI;QAErC,6EAAyD;QAAjD,uIAAS,cAAU,IAAC;QAA6B,kEAAM;QAAA,4DAAS;QAC5E,4DAAO;QAGX,4DAAM;;QAf2B,0DAA4B;QAA5B,uFAA4B;QAMb,0DAA4B;QAA5B,uFAA4B;QAGnD,0DAAgB;QAAhB,iFAAgB;;6FDD5B,cAAc;cAR1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAA2C;;;AASpC,MAAM,YAAY;IAEvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAChC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACzC,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,iCAAiC,CAAC,CAAC;IACnE,CAAC;IAED,cAAc,CAAC,IAAY;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,mCAAmC,IAAI,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,aAAa,CAAC,IAAW,EAAC,QAAe;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,qCAAqC,GAAC,IAAI,GAAC,GAAG,GAAC,QAAQ,CAAC,CAAC;IACtF,CAAC;;wEAhBS,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAyD;;AASlD,MAAM,4BAA4B;IAIvC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wGAPU,4BAA4B;4GAA5B,4BAA4B;QCTzC,oEAAG;QAAA,uDAA0B;QAAA,4DAAI;;QAA9B,0DAA0B;QAA1B,oGAA0B;;6FDShB,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,uCAAuC,CAAC;aACrD;sCAGU,KAAK;kBAAb,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICkB1C,0EACI;IADE,+VAA+B;IACjC,oEAAI;IAAA,uDAAiC;IAArC,4DAAI;IAAiC,+DACzC;IAAA,4DAAM;;;IADE,0DAAiC;IAAjC,6GAAiC;;ADT1C,MAAM,gBAAgB;IAS3B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAC5C,IAAI,CAAC,SAAS,GAAG;YACf,EAAC,IAAI,EAAC,UAAU;gBAChB,MAAM,EAAC,KAAK;aACX;YACD,EAAC,IAAI,EAAC,SAAS;gBACf,MAAM,EAAC,KAAK;aACX;YACD,EAAC,IAAI,EAAC,KAAK;gBACX,MAAM,EAAC,KAAK;aACX;YACD,EAAC,IAAI,EAAC,aAAa;gBACnB,MAAM,EAAC,KAAK;aACX;SACF,CAAC;QAEF,IAAI,CAAC,WAAW,GAAC,EAAC,IAAI,EAAC,EAAE,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC;IACzC,CAAC;IAED,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;QACvB,KAAK,CAAC,MAAM,GAAC,IAAI,CAAC;QAClB,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,EAAC;YAC1B,IAAG,CAAC,KAAG,KAAK,EAAC;gBACX,CAAC,CAAC,MAAM,GAAC,KAAK;aACf;SACF;IACH,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAC,OAAO,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAC,GAAG,GAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAEzD,oFAAoF;QACpF,kEAAkE;QAClE,sFAAsF;IAExF,CAAC;;gFAhDU,gBAAgB;gGAAhB,gBAAgB;QCT7B,4EACI;QAAA,oEAEA;QAAA,yEACI;QAAA,yEACE;QAAA,4EAAiH;QAAA,uDAAY;QAAA,4DAAS;QACtI,yEACE;QAAA,4EAAwB;QAAA,mEAAQ;QAAA,4DAAS;QACzC,6EAAwB;QAAA,kEAAM;QAAA,4DAAS;QAEzC,4DAAM;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EACI;QAAA,+GACI;QAER,4DAAM;QACN,gEAAO;QAEP,2EACI;QACA,wFAA6E;QAEjF,4DAAM;QAMV,4DAAM;;QA5BqH,0DAAY;QAAZ,6EAAY;QAY9D,0DAAoC;QAApC,qFAAoC;QAQ1E,0DAAqB;QAArB,yEAAqB;;6FDhB3C,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class User {\n        public username: string\n        public password:string\n        public type:string\n        public firstName:string\n        public lastName:string\n        public id:number\n    constructor(\n        \n      ) {}\n}\n","import { LoginComponent } from './login/login.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { StudentComponent } from './student/student.component'\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'student',\r\n    component: StudentComponent,\r\n  },\r\n  {\r\n    path:'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/login'\r\n  }\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Project2';\r\n}\r\n","<!-- <app-login></app-login> -->\r\n<!-- <app-student></app-student> -->\r\n<router-outlet></router-outlet>","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { ClassService } from './services/class-service.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { StudentClassDetailsComponent } from './student-class-details/student-class-details.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    StudentComponent,\r\n    StudentClassDetailsComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [ClassService, HttpClientModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ClassService } from './../services/class-service.service';\r\nimport { User } from './../Models/user';\r\nimport { Component, OnInit, NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\n\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  model=new User();\r\n  user: User;\r\n\r\n  nextLink:string;\r\n  showError:boolean;\r\n  errorMessage:string;\r\n\r\n  constructor(public router:Router, private classService: ClassService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.errorMessage=' ';\r\n  }\r\n\r\n  onSubmit():void{\r\n    this.classService.getUserByName(this.model.username,this.model.password).subscribe((c: User) => {(this.user = c); console.log(this.user);this.changePages()});\r\n    \r\n  }\r\n\r\n  changePages():void{\r\n    if(this.user){\r\n      this.errorMessage=' '\r\n      if(this.user.type=='student'){\r\n        this.router.navigate(['student'],{state:this.user});\r\n      }\r\n    }else{\r\n      this.errorMessage='Invalid Username or Password'\r\n    \r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","\r\n<div class=\"col-8 offset-2 center\">\r\n    <form class=\"text-center\">\r\n        <div>\r\n            <img src=\"assets/JERC.png\"/>\r\n        </div>\r\n        <div >\r\n            <!-- <label for=\"username\">Username: </label> -->\r\n            <input type = \"text\" [(ngModel)]=\"model.username\" required name = \"username\" placeholder=\"Username\"/>\r\n        </div>\r\n        \r\n        \r\n        <div>\r\n            <!-- <label for=\"password\">Password: </label> -->\r\n            <input class=\"lg\" type = \"password\" [(ngModel)]=\"model.password\" required name = \"password\" placeholder = \"Password\"/>\r\n            \r\n        </div>\r\n        <p class=\"error\">{{errorMessage}}</p>\r\n        \r\n        <button (click)=\"onSubmit()\" class=\"btn-primary btn-lg\" >Submit</button>\r\n    </form>     \r\n    \r\n    \r\n</div>\r\n\r\n    \r\n\r\n    \r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Class } from '../Models/Class';\r\nimport { User } from '../Models/user';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClassService {\r\n\r\n  constructor(private http: HttpClient) {\r\n      console.log('Creating Class Service');\r\n   }\r\n\r\n   getClassList(): Observable<Class[]> {\r\n     return this.http.get<Class[]>('http://localhost:3000/classList');\r\n   }\r\n\r\n   getClassByName(name: string): Observable<Class[]> {\r\n    return this.http.get<Class[]>(`http://localhost:3000/classList=${name}`);\r\n   }\r\n\r\n   getUserByName(name:string,password:string):Observable<User>{\r\n     return this.http.get<User>('http://localhost:8080/app/api/user/'+name+'/'+password);\r\n   }\r\n}\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Class } from '../models/class';\r\n\r\n\r\n@Component({\r\n  selector: 'app-student-class-details',\r\n  templateUrl: './student-class-details.component.html',\r\n  styleUrls: ['./student-class-details.component.css']\r\n})\r\nexport class StudentClassDetailsComponent implements OnInit {\r\n\r\n  @Input() class: Class;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Class name: {{class.name}}</p>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Class } from '../models/class';\r\nimport { ClassService } from '../services/class-service.service';\r\nimport { User } from '../Models/user';\r\n\r\n@Component({\r\n  selector: 'app-student',\r\n  templateUrl: './student.component.html',\r\n  styleUrls: ['./student.component.css']\r\n})\r\nexport class StudentComponent implements OnInit {\r\n  username:String;\r\n  user:User;\r\n  classList: Class[];\r\n  activeClass:Class;\r\n\r\n  //newClassList: Class[] = new Class (' ', true);\r\n  newClassList: Class[];\r\n\r\n  constructor(private classService: ClassService) {\r\n    this.classList = [\r\n      {name:'Math 101',\r\n      active:false\r\n      },\r\n      {name:'Bio 101',\r\n      active:false\r\n      },\r\n      {name:'Gym',\r\n      active:false\r\n      },\r\n      {name:'English 101',\r\n      active:false\r\n      }\r\n    ];\r\n  \r\n    this.activeClass={name:'',active:true};\r\n  }\r\n\r\n  setActiveClass(state){\r\n    this.activeClass=state;\r\n    state.active=true;\r\n    for(let o of this.classList){\r\n      if(o!==state){\r\n        o.active=false\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Initiating Class List');\r\n    console.log(history.state)\r\n    this.user=history.state;\r\n    this.username=this.user.firstName+\" \"+this.user.lastName;\r\n\r\n    //When the Observable is being returned, we can subscribe and listen to the changes.\r\n    // It will continuously change as long as there is data coming in.\r\n    //this.classService.getClassList().subscribe((c: Class[]) => (this.newClassList = c));\r\n    \r\n  }\r\n\r\n}\r\n","\r\n<nav ngbNav #nav=\"ngbNav\" class=\"navbar-light navbar-toggler\">\r\n    <img src=\"assets/JERC-basic.png\" height=\"40px\"/>\r\n    \r\n    <div class=\"ml-auto\">\r\n        <div ngbDropdown class=\"d-inline-block \" placement=\"bottom-right auto\">\r\n          <button class=\"btn btn-outline-none\" style=\"background-color: transparent;\"id=\"dropdownBasic1\" ngbDropdownToggle>{{username}}</button>\r\n          <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n            <button ngbDropdownItem>Settings</button>\r\n            <button ngbDropdownItem>Logout</button>\r\n            \r\n          </div>\r\n        </div>\r\n    </div>\r\n</nav>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-3\" style=\"background-color:rgba(0, 255, 64, 0.267)\">\r\n        <div  (click)=\"setActiveClass(class)\" class=\"classList offset-1\" *ngFor = \"let class of newClassList\">\r\n            <p >{{ class.name }},{{class.active}}<p>\r\n        </div>\r\n    </div>\r\n    <p></p>\r\n    \r\n    <div class =\"col-10\" >\r\n        <!-- <app-login></app-login> -->\r\n        <app-student-class-details [class]=\"activeClass\"></app-student-class-details>\r\n        \r\n    </div>\r\n\r\n    <!-- <div class=\"newClassList\" *ngFor=\"let class of newClassList\">\r\n        <p>{{class.name}}</p> \r\n    </div> -->\r\n    \r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}